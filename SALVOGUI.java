/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jasonguzonSALVOmidterm;

import javax.swing.JOptionPane;

/**
 *
 * @author jason
 */
public class SALVOGUI extends javax.swing.JFrame {

    /**
     * Creates new form SALVOGUI
     */
    public SALVOGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salvoTitle = new javax.swing.JLabel();
        playersShipTitle = new javax.swing.JLabel();
        enemysShipTitle = new javax.swing.JLabel();
        playerCountry = new javax.swing.JComboBox();
        playerShipType = new javax.swing.JComboBox();
        enemyShipType = new javax.swing.JComboBox();
        enemyCountry = new javax.swing.JComboBox();
        selectNewShipButton = new javax.swing.JButton();
        pGuns = new javax.swing.JLabel();
        pGunQuotation = new javax.swing.JLabel();
        pBroadside = new javax.swing.JLabel();
        pStern = new javax.swing.JLabel();
        pShipName = new javax.swing.JLabel();
        pBow = new javax.swing.JLabel();
        pArmor = new javax.swing.JLabel();
        pSpeedArmorDash = new javax.swing.JLabel();
        pSpeed = new javax.swing.JLabel();
        pTurret = new javax.swing.JLabel();
        pFlotation = new javax.swing.JLabel();
        pBroadsidePlus = new javax.swing.JLabel();
        pSternPlus = new javax.swing.JLabel();
        pBowPlus = new javax.swing.JLabel();
        eGuns = new javax.swing.JLabel();
        eGunQuotation = new javax.swing.JLabel();
        eSternPlus = new javax.swing.JLabel();
        eStern = new javax.swing.JLabel();
        eShipName = new javax.swing.JLabel();
        eBroadsidePlus = new javax.swing.JLabel();
        eBroadside = new javax.swing.JLabel();
        eBowPlus = new javax.swing.JLabel();
        eBow = new javax.swing.JLabel();
        eArmor = new javax.swing.JLabel();
        eSpeedArmorDash = new javax.swing.JLabel();
        eSpeed = new javax.swing.JLabel();
        eTurret = new javax.swing.JLabel();
        eFlotation = new javax.swing.JLabel();
        die1Value = new javax.swing.JTextField();
        rollDiceButton = new javax.swing.JButton();
        die2Value = new javax.swing.JTextField();
        weatherText = new javax.swing.JTextField();
        getWeatherButton = new javax.swing.JButton();
        initialRangeText = new javax.swing.JTextField();
        getInitialRangeButton = new javax.swing.JButton();
        continueButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuNewGame = new javax.swing.JMenuItem();
        menuQuit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SALVOGUI");

        salvoTitle.setText("SALVO!");

        playersShipTitle.setText("Player's Ship");

        enemysShipTitle.setText("Enemy's Ship");

        playerCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Britain", "Germany" }));

        playerShipType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BB", "BC", "PB", "CA", "CL" }));
        playerShipType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerShipTypeActionPerformed(evt);
            }
        });

        enemyShipType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BB", "BC", "PB", "CA", "CL" }));

        enemyCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Britain", "Germany" }));
        enemyCountry.setSelectedIndex(1);

        selectNewShipButton.setText("Select New Ships");
        selectNewShipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectNewShipButtonActionPerformed(evt);
            }
        });

        pGuns.setText("0");

        pGunQuotation.setText("\"");

        pBroadside.setText("0");

        pStern.setText("0");

        pShipName.setText("Ship Name");

        pBow.setText("0");

        pArmor.setText("0");

        pSpeedArmorDash.setText("-");

        pSpeed.setText("0");

        pTurret.setText("0");

        pFlotation.setText("0");

        pBroadsidePlus.setText("+");

        pSternPlus.setText("+");

        pBowPlus.setText("+");

        eGuns.setText("0");

        eGunQuotation.setText("\"");

        eSternPlus.setText("+");

        eStern.setText("0");

        eShipName.setText("Ship Name");

        eBroadsidePlus.setText("+");

        eBroadside.setText("0");

        eBowPlus.setText("+");

        eBow.setText("0");

        eArmor.setText("0");

        eSpeedArmorDash.setText("-");

        eSpeed.setText("0");

        eTurret.setText("0");

        eFlotation.setText("0");

        die1Value.setEditable(false);
        die1Value.setText("1");
        die1Value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                die1ValueActionPerformed(evt);
            }
        });

        rollDiceButton.setText("Roll Dice");
        rollDiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollDiceButtonActionPerformed(evt);
            }
        });

        die2Value.setEditable(false);
        die2Value.setText("1");
        die2Value.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                die2ValueActionPerformed(evt);
            }
        });

        weatherText.setEditable(false);
        weatherText.setText("?");
        weatherText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weatherTextActionPerformed(evt);
            }
        });

        getWeatherButton.setText("Get Weather");
        getWeatherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getWeatherButtonActionPerformed(evt);
            }
        });

        initialRangeText.setText("?");
        initialRangeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initialRangeTextActionPerformed(evt);
            }
        });

        getInitialRangeButton.setText("Get Initial Range");
        getInitialRangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getInitialRangeButtonActionPerformed(evt);
            }
        });

        continueButton.setText("Continue");
        continueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueButtonActionPerformed(evt);
            }
        });

        menuFile.setText("File");

        menuNewGame.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuNewGame.setText("New Game");
        menuFile.add(menuNewGame);

        menuQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        menuQuit.setText("Quit");
        menuQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuQuitActionPerformed(evt);
            }
        });
        menuFile.add(menuQuit);

        jMenuBar1.add(menuFile);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(continueButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playersShipTitle, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(pGuns)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pGunQuotation)
                        .addGap(24, 24, 24)
                        .addComponent(pBroadsidePlus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pBroadside))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(playerCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playerShipType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(salvoTitle, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(pFlotation)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(pTurret)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(pSpeed)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pSpeedArmorDash)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pArmor))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(pSternPlus)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pStern)
                            .addGap(18, 18, 18)
                            .addComponent(pShipName)
                            .addGap(18, 18, 18)
                            .addComponent(pBowPlus)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pBow)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(die1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(die2Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rollDiceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(selectNewShipButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enemysShipTitle)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enemyCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enemyShipType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(eFlotation)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(eTurret)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(eSpeed)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(eSpeedArmorDash)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(eArmor))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(eSternPlus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eStern))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(eGuns)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eGunQuotation)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(eBroadsidePlus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eBroadside))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(eShipName)
                                    .addGap(18, 18, 18)
                                    .addComponent(eBowPlus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eBow)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(getInitialRangeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(getWeatherButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(weatherText)
                            .addComponent(initialRangeText, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE))))
                .addGap(81, 81, 81))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(salvoTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playersShipTitle)
                    .addComponent(enemysShipTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerShipType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyShipType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemyCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectNewShipButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pGuns)
                    .addComponent(pBroadside)
                    .addComponent(pGunQuotation)
                    .addComponent(pBroadsidePlus)
                    .addComponent(eGuns)
                    .addComponent(eGunQuotation)
                    .addComponent(eBroadsidePlus)
                    .addComponent(eBroadside))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pStern)
                    .addComponent(pShipName)
                    .addComponent(pBow)
                    .addComponent(pSternPlus)
                    .addComponent(pBowPlus)
                    .addComponent(eSternPlus)
                    .addComponent(eStern)
                    .addComponent(eShipName)
                    .addComponent(eBowPlus)
                    .addComponent(eBow))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pArmor)
                    .addComponent(pSpeedArmorDash)
                    .addComponent(pSpeed)
                    .addComponent(pTurret)
                    .addComponent(pFlotation)
                    .addComponent(eArmor)
                    .addComponent(eSpeedArmorDash)
                    .addComponent(eSpeed)
                    .addComponent(eTurret)
                    .addComponent(eFlotation))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(die1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(die2Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rollDiceButton)
                    .addComponent(weatherText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getWeatherButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(getInitialRangeButton)
                    .addComponent(initialRangeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(continueButton)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuQuitActionPerformed
        System.exit(0);// TODO add your handling code here:
    }//GEN-LAST:event_menuQuitActionPerformed

    private void playerShipTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerShipTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerShipTypeActionPerformed

    private void selectNewShipButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectNewShipButtonActionPerformed
        String playerCountryStr = (String)playerCountry.getSelectedItem();
        String playerShipStr = (String)playerShipType.getSelectedItem();
        String enemyCountryStr = (String)enemyCountry.getSelectedItem();
        String enemyShipStr = (String)enemyShipType.getSelectedItem();
        
        if (playerCountryStr == "Britain" && playerShipStr == "PB")
        {
            pGuns.setText("14");
            pBroadside.setText("5");
            pStern.setText("2");
            pBow.setText("3");
            pShipName.setText("King George V");
            pFlotation.setText("6");
            pTurret.setText("6");
            pSpeed.setText("9");
            pArmor.setText("6");
        }
        else if (playerCountryStr == "Britain" && playerShipStr == "BC")
        {
            pGuns.setText("15");
            pBroadside.setText("5");
            pStern.setText("2");
            pBow.setText("2");
            pShipName.setText("Hood");
            pFlotation.setText("7");
            pTurret.setText("8");
            pSpeed.setText("10");
            pArmor.setText("4");
        }
        else if (playerCountryStr == "Britain" && playerShipStr == "BB")
        {
            pGuns.setText("16");
            pBroadside.setText("6");
            pStern.setText("0");
            pBow.setText("4");
            pShipName.setText("Nelson");
            pFlotation.setText("6");
            pTurret.setText("6");
            pSpeed.setText("7");
            pArmor.setText("6");
        }
        else if (playerCountryStr == "Britain" && playerShipStr == "CA")
        {
            pGuns.setText("8");
            pBroadside.setText("1");
            pStern.setText("1");
            pBow.setText("1");
            pShipName.setText("Kent");
            pFlotation.setText("4");
            pTurret.setText("4");
            pSpeed.setText("10");
            pArmor.setText("1");
        }
        else if (playerCountryStr == "Britain" && playerShipStr == "CL")
        {
            pGuns.setText("6");
            pBroadside.setText("1");
            pStern.setText("0");
            pBow.setText("0");
            pShipName.setText("Ajax");
            pFlotation.setText("3");
            pTurret.setText("4");
            pSpeed.setText("10");
            pArmor.setText("0");
        }
        else if (playerCountryStr == "Germany" && playerShipStr == "PB")
        {
            pGuns.setText("11");
            pBroadside.setText("3");
            pStern.setText("1");
            pBow.setText("1");
            pShipName.setText("Graf Spee");
            pFlotation.setText("4");
            pTurret.setText("4");
            pSpeed.setText("8");
            pArmor.setText("2");
        }
        else if (playerCountryStr == "Germany" && playerShipStr == "CL")
        {
            pGuns.setText("6");
            pBroadside.setText("1");
            pStern.setText("0");
            pBow.setText("0");
            pShipName.setText("Nurnburg");
            pFlotation.setText("3");
            pTurret.setText("4");
            pSpeed.setText("10");
            pArmor.setText("1");
        }
        else if (playerCountryStr == "Germany" && playerShipStr == "CA")
        {
            pGuns.setText("8");
            pBroadside.setText("2");
            pStern.setText("1");
            pBow.setText("1");
            pShipName.setText("Prinz Eugen");
            pFlotation.setText("4");
            pTurret.setText("4");
            pSpeed.setText("10");
            pArmor.setText("1");
        }
        else if (playerCountryStr == "Germany" && playerShipStr == "BC")
        {
            pGuns.setText("11");
            pBroadside.setText("4");
            pStern.setText("1");
            pBow.setText("2");
            pShipName.setText("Scharnhorst");
            pFlotation.setText("6");
            pTurret.setText("6");
            pSpeed.setText("10");
            pArmor.setText("4");
        }
        else if (playerCountryStr == "Germany" && playerShipStr == "BB")
        {
            pGuns.setText("15");
            pBroadside.setText("6");
            pStern.setText("3");
            pBow.setText("3");
            pShipName.setText("Bismarck");
            pFlotation.setText("7");
            pTurret.setText("8");
            pSpeed.setText("9");
            pArmor.setText("5");
        }
        
        if (enemyCountryStr == "Britain" && enemyShipStr == "PB")
        {
            eGuns.setText("14");
            eBroadside.setText("5");
            eStern.setText("2");
            eBow.setText("3");
            eShipName.setText("King George V");
            eFlotation.setText("6");
            eTurret.setText("6");
            eSpeed.setText("9");
            eArmor.setText("6");
        }
        else if (enemyCountryStr == "Britain" && enemyShipStr == "BC")
        {
            eGuns.setText("15");
            eBroadside.setText("5");
            eStern.setText("2");
            eBow.setText("2");
            eShipName.setText("Hood");
            eFlotation.setText("7");
            eTurret.setText("8");
            eSpeed.setText("10");
            eArmor.setText("4");
        }
        else if (enemyCountryStr == "Britain" && enemyShipStr == "BB")
        {
            eGuns.setText("16");
            eBroadside.setText("6");
            eStern.setText("0");
            eBow.setText("4");
            eShipName.setText("Nelson");
            eFlotation.setText("6");
            eTurret.setText("6");
            eSpeed.setText("7");
            eArmor.setText("6");
        }
        else if (enemyCountryStr == "Britain" && enemyShipStr == "CA")
        {
            eGuns.setText("8");
            eBroadside.setText("1");
            eStern.setText("1");
            eBow.setText("1");
            eShipName.setText("Kent");
            eFlotation.setText("4");
            eTurret.setText("4");
            eSpeed.setText("10");
            eArmor.setText("1");
        }
        else if (enemyCountryStr == "Britain" && enemyShipStr == "CL")
        {
            eGuns.setText("6");
            eBroadside.setText("1");
            eStern.setText("0");
            eBow.setText("0");
            eShipName.setText("Ajax");
            eFlotation.setText("3");
            eTurret.setText("4");
            eSpeed.setText("10");
            eArmor.setText("0");
        }
        else if (enemyCountryStr == "Germany" && enemyShipStr == "PB")
        {
            eGuns.setText("11");
            eBroadside.setText("3");
            eStern.setText("1");
            eBow.setText("1");
            eShipName.setText("Graf Spee");
            eFlotation.setText("4");
            eTurret.setText("4");
            eSpeed.setText("8");
            eArmor.setText("2");
        }
        else if (enemyCountryStr == "Germany" && enemyShipStr == "CL")
        {
            eGuns.setText("6");
            eBroadside.setText("1");
            eStern.setText("0");
            eBow.setText("0");
            eShipName.setText("Nurnburg");
            eFlotation.setText("3");
            eTurret.setText("4");
            eSpeed.setText("10");
            eArmor.setText("1");
        }
        else if (enemyCountryStr == "Germany" && enemyShipStr == "CA")
        {
            eGuns.setText("8");
            eBroadside.setText("2");
            eStern.setText("1");
            eBow.setText("1");
            eShipName.setText("Prinz Eugen");
            eFlotation.setText("4");
            eTurret.setText("4");
            eSpeed.setText("10");
            eArmor.setText("1");
        }
        else if (enemyCountryStr == "Germany" && enemyShipStr == "BC")
        {
            eGuns.setText("11");
            eBroadside.setText("4");
            eStern.setText("1");
            eBow.setText("2");
            eShipName.setText("Scharnhorst");
            eFlotation.setText("6");
            eTurret.setText("6");
            eSpeed.setText("10");
            eArmor.setText("4");
        }
        else if (enemyCountryStr == "Germany" && enemyShipStr == "BB")
        {
            eGuns.setText("15");
            eBroadside.setText("6");
            eStern.setText("3");
            eBow.setText("3");
            eShipName.setText("Bismarck");
            eFlotation.setText("7");
            eTurret.setText("8");
            eSpeed.setText("9");
            eArmor.setText("5");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_selectNewShipButtonActionPerformed

    private void die1ValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_die1ValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_die1ValueActionPerformed

    private void rollDiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollDiceButtonActionPerformed
        int die1;
        int die2;
        die1 = (int)(Math.random()*6)+1;
        die2 = (int)(Math.random()*6)+1;
        String value1 = String.valueOf(die1);
        String value2 = String.valueOf(die2);
        die1Value.setText(value1);
        die2Value.setText(value2);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_rollDiceButtonActionPerformed

    private void die2ValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_die2ValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_die2ValueActionPerformed

    private void weatherTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weatherTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_weatherTextActionPerformed

    private void getWeatherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getWeatherButtonActionPerformed
        int die1 = Integer.parseInt(die1Value.getText());
        int die2 = Integer.parseInt(die2Value.getText());
        int weatherValue = die1 + die2;
        if (weatherValue == 2 || weatherValue == 3)  
        {
            weatherText.setText("Stormy");
        }
        else if (weatherValue > 3 && weatherValue < 7)  
        {
            weatherText.setText("Misty");
        }
        else if (weatherValue > 6 && weatherValue < 11)  
        {
            weatherText.setText("Fair");
        }
        else if (weatherValue > 10)
        {
            weatherText.setText("Fine");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_getWeatherButtonActionPerformed

    private void initialRangeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initialRangeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_initialRangeTextActionPerformed

    private void getInitialRangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getInitialRangeButtonActionPerformed
        int die1 = Integer.parseInt(die1Value.getText());
        int die2 = Integer.parseInt(die2Value.getText());
        int initialRangeValue = die1 + die2;
        String weather = (String)weatherText.getText();
        if (weather == "Stormy")
        {
            initialRangeValue = initialRangeValue - 8;
        }
        else if (weather == "Misty")
        {
            initialRangeValue = initialRangeValue - 4;
        }
        else if (weather == "Fine")
        {
            initialRangeValue = initialRangeValue + 2;
        }
        
        if (initialRangeValue <= 1)
        {
            initialRangeText.setText("Medium");
        }
        else if (initialRangeValue > 1 && initialRangeValue < 5)
        {
            initialRangeText.setText("Medium-Long");
        }
        else if (initialRangeValue > 4 && initialRangeValue < 10)
        {
            initialRangeText.setText("Long");
        }
        else
        {
            initialRangeText.setText("Extreme");
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_getInitialRangeButtonActionPerformed

    private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueButtonActionPerformed
    String info[] = new String[24];
    info[0] = (String)playerCountry.getSelectedItem();
    info[1] = (String)playerShipType.getSelectedItem();
    
    info[2] = pGuns.getText();
    info[3] = pBroadside.getText();
    info[4] = pStern.getText();
    info[6] = pBow.getText();
    info[5] = pShipName.getText();
    info[7] = pFlotation.getText();
    info[8] = pTurret.getText();
    info[9] = pSpeed.getText();
    info[10] = pArmor.getText();
    
    info[11] = (String)enemyCountry.getSelectedItem();
    info[12] = (String)enemyShipType.getSelectedItem();
    info[13] = eGuns.getText();
    info[14] = eBroadside.getText();
    info[15] = eStern.getText();
    info[17] = eBow.getText();
    info[16] = eShipName.getText();
    info[18] = eFlotation.getText();
    info[19] = eTurret.getText();
    info[20] = eSpeed.getText();
    info[21] = eArmor.getText();
    
    info[22] = weatherText.getText();
    info[23] = initialRangeText.getText();
    
        if (info[5] == "Ship Name" || info[16] == "Ship Name" || info[22] == "?" || info[23] == "?")
        {
            JOptionPane.showMessageDialog(this, "Please select your ships and get the weather and initial range.");
        }
        else
        {
            SALVOTurns.main(info);
        }// TODO add your handling code here:
    }//GEN-LAST:event_continueButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SALVOGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SALVOGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SALVOGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SALVOGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SALVOGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton continueButton;
    private javax.swing.JTextField die1Value;
    private javax.swing.JTextField die2Value;
    private javax.swing.JLabel eArmor;
    private javax.swing.JLabel eBow;
    private javax.swing.JLabel eBowPlus;
    private javax.swing.JLabel eBroadside;
    private javax.swing.JLabel eBroadsidePlus;
    private javax.swing.JLabel eFlotation;
    private javax.swing.JLabel eGunQuotation;
    private javax.swing.JLabel eGuns;
    private javax.swing.JLabel eShipName;
    private javax.swing.JLabel eSpeed;
    private javax.swing.JLabel eSpeedArmorDash;
    private javax.swing.JLabel eStern;
    private javax.swing.JLabel eSternPlus;
    private javax.swing.JLabel eTurret;
    private javax.swing.JComboBox enemyCountry;
    private javax.swing.JComboBox enemyShipType;
    private javax.swing.JLabel enemysShipTitle;
    private javax.swing.JButton getInitialRangeButton;
    private javax.swing.JButton getWeatherButton;
    private javax.swing.JTextField initialRangeText;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuNewGame;
    private javax.swing.JMenuItem menuQuit;
    private javax.swing.JLabel pArmor;
    private javax.swing.JLabel pBow;
    private javax.swing.JLabel pBowPlus;
    private javax.swing.JLabel pBroadside;
    private javax.swing.JLabel pBroadsidePlus;
    private javax.swing.JLabel pFlotation;
    private javax.swing.JLabel pGunQuotation;
    private javax.swing.JLabel pGuns;
    private javax.swing.JLabel pShipName;
    private javax.swing.JLabel pSpeed;
    private javax.swing.JLabel pSpeedArmorDash;
    private javax.swing.JLabel pStern;
    private javax.swing.JLabel pSternPlus;
    private javax.swing.JLabel pTurret;
    private javax.swing.JComboBox playerCountry;
    private javax.swing.JComboBox playerShipType;
    private javax.swing.JLabel playersShipTitle;
    private javax.swing.JButton rollDiceButton;
    private javax.swing.JLabel salvoTitle;
    private javax.swing.JButton selectNewShipButton;
    private javax.swing.JTextField weatherText;
    // End of variables declaration//GEN-END:variables
}
